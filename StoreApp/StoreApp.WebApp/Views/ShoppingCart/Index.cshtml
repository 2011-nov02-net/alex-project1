@model IEnumerable<StoreApp.WebApp.Models.ProductViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Cart</h1>




@if (!Model.Any())
{
    <div class="text-center">
        <p>Your cart is empty.</p>
    </div>

}
else
{
    @if (TempData.ContainsKey("noStock"))
    {
        var x = TempData["noStock"] as string;
        if (x == "true")
        {
            <p class="text-danger">One or more of your product amounts exceeds current stock in this location.</p>
        }
    }
    <table class="table">
        <thead>
            <tr>

                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Amount)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        $@Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @*Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })*@
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    <br />
    <div class="text-center">
        @Html.ActionLink("Checkout", "CheckOut")
        <br />
        <br />
        @Html.ActionLink("Clear Cart", "EmptyCart")
    </div>

}
